name: Compile ztecfg

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  PYTHON_VERSION: '3.8'
  PYTHON_FILE: 'ztecfg.py'

jobs:
  build:
    name: Build Execute File
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install depdendencies (Linux / macOS)
        if: matrix.os != 'windows-2019'
        run: |
          [ -e requirements.txt ] && pip install -r requirements.txt

      - name: Install depdendencies (Windows)
        if: matrix.os == 'windows-2019'
        run: |
          if (Test-Path requirements.txt)
          {
            pip install -r requirements.txt
          }

       - name: Compile
        run: |
          pyinstaller --onefile ${{ env.PYTHON_FILE }}

      - name: Upload Artifact (Linux)
        if: matrix.os == 'ubuntu-18.04'
        uses: actions/upload-artifact@v2
        with:
          name: ztecfg_linux
          path: dist/*

      - name: Upload Artifact (Windows)
        if: matrix.os == 'windows-2019'
        uses: actions/upload-artifact@v2
        with:
          name: ztecfg_win
          path: dist/*

      - name: Upload Artifact (macOS)
        if: matrix.os == 'macos-10.15'
        uses: actions/upload-artifact@v2
        with:
          name: ztecfg_mac
          path: dist/*
